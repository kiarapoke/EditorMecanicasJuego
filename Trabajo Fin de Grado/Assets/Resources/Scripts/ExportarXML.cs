using UnityEngine;
using System.Collections;
using UnityEngine.UI;
using System.Xml;
using System.IO;
using Elementos;
using System.Collections.Generic;

public class ExportarXML : MonoBehaviour {

    public GameObject textField;
    public GameObject button;

	// Use this for initialization
	void Start () {
        
	}
	
	// Update is called once per frame
	void Update () {
	
	}

    public void Exportar()
    {
        if (textField.GetComponent<Text>().text != "")
        {
            XmlWriterSettings settings = new XmlWriterSettings();
            settings.CloseOutput = true;
            string filepath = Application.dataPath + "/Resources/XMLExportados/" + textField.GetComponent<Text>().text + ".xml";
            File.Create(filepath);
            exportando(textField.GetComponent<Text>().text);
        }
    }

    void exportando(string fichero)
    {
        string filepath = Application.dataPath + "/Resources/XMLExportados/" + fichero + ".xml";

        XmlWriterSettings settings = new XmlWriterSettings();
        settings.Indent = true;

        using (XmlWriter writer = XmlWriter.Create(fichero + ".xml", settings))
        {   

            writer.WriteStartDocument();

            writer.WriteComment("This file is generated by the program.");

            writer.WriteStartElement("Juego");

            writer.WriteStartElement("Elementos");
            
            //PERSONAJES
            writer.WriteStartElement("Personajes");
            foreach (Personaje personaje in UIController.Lista.getPersonajes())
            {
                WritePersonaje(writer, personaje.ID, personaje.nombre, personaje.propiedades);
            }
            writer.WriteEndElement();

            //NPCs
            writer.WriteStartElement("NPCs");
            foreach (NPC NPC in UIController.Lista.getNPCs())
            {
                WriteNPC(writer, NPC.ID, NPC.nombre, NPC.propiedades);
            }
            writer.WriteEndElement();

            //Objetos
            writer.WriteStartElement("Objetos");
            foreach (Objeto objeto in UIController.Lista.getObjetos())
            {
                WriteObjeto(writer, objeto.ID, objeto.nombre, objeto.propiedades);
            }
            writer.WriteEndElement();

            //Acciones
            writer.WriteStartElement("Acciones");
            foreach (Accion accion in UIController.Lista.getAcciones())
            {
                WriteAccion(writer, accion.ID, accion.nombre, accion.propiedades);
            }
            writer.WriteEndElement();

            writer.WriteEndElement(); // </Elementos>

            //Reglas
            writer.WriteStartElement("Reglas");
            foreach (Regla regla in UIController.Lista.getReglas())
            {
                WriteRegla(writer, regla);
            }

            writer.WriteEndElement(); // </Reglas>

            writer.WriteEndElement(); // </Juego>
            writer.WriteEndDocument(); // FIN
            writer.Flush();
        } 
    }

    void WritePersonaje(XmlWriter writer, int ID, string nombre, Dictionary<string,string> propiedades)
    {
        writer.WriteStartElement("Personaje");
        writer.WriteElementString("ID", ID.ToString());
        writer.WriteElementString("Nombre", nombre.ToLower());
        writer.WriteStartElement("Propiedades");
        foreach (KeyValuePair<string, string> propiedad in propiedades)
        {
            writer.WriteElementString(propiedad.Key.ToLower(), propiedad.Value.ToLower());
        }
        writer.WriteEndElement();
        writer.WriteEndElement();
    }

    void WriteNPC(XmlWriter writer, int ID, string nombre, Dictionary<string, string> propiedades)
    {
        writer.WriteStartElement("NPC");
        writer.WriteElementString("ID", ID.ToString());
        writer.WriteElementString("Nombre", nombre.ToLower());
        writer.WriteStartElement("Propiedades");
        foreach (KeyValuePair<string, string> propiedad in propiedades)
        {
            writer.WriteElementString(propiedad.Key.ToLower(), propiedad.Value.ToLower());
        }
        writer.WriteEndElement();
        writer.WriteEndElement();
    }

    void WriteObjeto(XmlWriter writer, int ID, string nombre, Dictionary<string, string> propiedades)
    {
        writer.WriteStartElement("Objeto");
        writer.WriteElementString("ID", ID.ToString());
        writer.WriteElementString("Nombre", nombre.ToLower());
        writer.WriteStartElement("Propiedades");
        foreach (KeyValuePair<string, string> propiedad in propiedades)
        {
            if (propiedad.Key == "text") writer.WriteElementString(propiedad.Key.ToLower(), propiedad.Value);
            else writer.WriteElementString(propiedad.Key.ToLower(), propiedad.Value.ToLower());
        }
        writer.WriteEndElement();
        writer.WriteEndElement();
    }

    void WriteAccion(XmlWriter writer, int ID, string nombre, Dictionary<string, string> propiedades)
    {
        writer.WriteStartElement("Accion");
        writer.WriteElementString("ID", ID.ToString());
        writer.WriteElementString("Nombre", nombre.ToLower());
        writer.WriteStartElement("Propiedades");
        foreach (KeyValuePair<string, string> propiedad in propiedades)
        {
            writer.WriteElementString(propiedad.Key.ToLower(), propiedad.Value.ToLower());
        }
        writer.WriteEndElement();
        writer.WriteEndElement();
    }

    void WriteRegla(XmlWriter writer, Regla regla)
    {
        writer.WriteStartElement("Regla");
        writer.WriteStartElement("Antecedentes");
        foreach (List<Elemento> antecedente in regla.antecedentes)
        {
            writer.WriteStartElement("Antecedente");
            foreach (Elemento elemento in antecedente)
            {
                writer.WriteStartElement("Elemento");
                writer.WriteElementString("Nombre", elemento.nombre.ToLower());
                writer.WriteElementString("ID", elemento.ID.ToString());
                writer.WriteElementString("Tipo", elemento.propiedades["_Tipo"]);
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
        }
        writer.WriteEndElement();
        writer.WriteStartElement("Consecuente");
        foreach (Elemento elemento in regla.consecuente)
        {
            writer.WriteStartElement("Elemento");
            writer.WriteElementString("Nombre", elemento.nombre.ToLower());
            writer.WriteElementString("ID", elemento.ID.ToString());
            writer.WriteElementString("Tipo", elemento.propiedades["_Tipo"]);
            writer.WriteEndElement();
        }
        writer.WriteEndElement();
        writer.WriteEndElement();
    }

}
